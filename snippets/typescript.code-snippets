{
  "React Bricks TypeScript Brick": {
    "prefix": "brick",
    "body": [
      "import React from 'react'",
      "import { types, Text } from 'react-bricks/${2|frontend,rsc|}'",
      "",
      "interface ${1:${TM_FILENAME_BASE}}Props {",
      "\ttitle: types.TextValue",
      "}",
      "",
      "const ${1:${TM_FILENAME_BASE}}: types.Brick<${1:${TM_FILENAME_BASE}}Props> = ({ title }) => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t<Text",
      "\t\t\t\tpropName=\"title\"",
      "\t\t\t\tvalue={title}",
      "\t\t\t\tplaceholder=\"Type a title...\"",
      "\t\t\t\trenderBlock={({ children }) => (<h1>{children}</h1>)}",
      "\t\t\t/>$0",
      "\t\t</div>",
      "\t)",
      "}",
      "",
      "${1:${TM_FILENAME_BASE}}.schema = {",
      "\t$LINE_COMMENT Unique brick name",
      "\tname: '${TM_FILENAME_BASE/(.*)/${1:/downcase}/}',",
      "\tlabel: '${1:${TM_FILENAME_BASE}}',",
      "",
      "\t$LINE_COMMENT Defaults when a new brick is added",
      "\tgetDefaultProps: () => ({",
      "\t\ttitle: 'Thick as a brick',",
      "\t}),",
      "",
      "\t$LINE_COMMENT Sidebar Edit controls for props",
      "\tsideEditProps: [],",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}",
      ""
    ],
    "description": "Creates a React Bricks TypeScript brick"
  },
  "React Bricks sideEditProp": {
    "prefix": "sideEditProp",
    "body": [
      "{",
      "\tname: '${1:name}',",
      "\tlabel: '${2:Label}',",
      "\ttype: types.SideEditPropType.${3|Text,Textarea,Number,Date,Boolean,Select,Autocomplete,Range,Image,Relationship,Custom|},",
      "}"
    ],
    "description": "Creates a React Bricks' Brick `sideEditProp`"
  },
  "React Bricks selectOptions": {
    "prefix": "selectOptions",
    "body": [
      "selectOptions: {",
      "\tdisplay: types.OptionsDisplay.${1|Select,Radio,Color|},",
      "\toptions: [",
      "\t\t{ value: '${2:value}', label: '${3:Label}' },",
      "\t]",
      "}"
    ],
    "description": "Creates `selectOptions` for a select `sideEditProp`"
  },
  "React Bricks Text": {
    "prefix": "Text",
    "body": [
      "<Text",
      "\tpropName=\"${1:text}\"",
      "\tvalue={${1:text}}",
      "\tplaceholder=\"Type a ${1:text}...\"",
      "\trenderBlock={({ children }) => ${2:(<span>{children\\}</span>)}}",
      "/>"
    ],
    "description": "Add a React Bricks <Text> component"
  },
  "React Bricks RichText": {
    "prefix": "RichText",
    "body": [
      "<RichText",
      "\tpropName=\"${1:text}\"",
      "\tvalue={${1:text}}",
      "\tplaceholder=\"Type a ${1:text}...\"",
      "\trenderBlock={({ children }) => (${2:<span>{children\\}</span>})}",
      "\tallowedFeatures={[types.RichTextFeatures.${3:Bold}]}",
      "/>"
    ],
    "description": "Add a React Bricks <RichText> component"
  },
  "React Bricks Image": {
    "prefix": "Image",
    "body": [
      "<Image",
      "\tpropName=\"${1:image}\"",
      "\tsource={${1:image}}",
      "\talt=\"${2:altText}\"",
      "\tmaxWidth={${3:300}}",
      "\taspectRatio={${4:1}}",
      "/>"
    ],
    "description": "Add a React Bricks <Image> component"
  },
  "React Bricks File": {
    "prefix": "File",
    "body": [
      "<File",
      "\tpropName=\"${1:file}\"",
      "\tsource={${1:file}}",
      "\tallowedExtensions={[${2:'.pdf'}]}",
      "\trenderBlock={({ name, url, size }) => (",
      "\t\t<a href={url}>",
      "\t\t\t{name}, {size / 1000}KB",
      "\t\t</a>",
      "\t)}",
      "/>"
    ],
    "description": "Add React Bricks <File> component"
  },
  "React Bricks Repeater": {
    "prefix": "Repeater",
    "body": ["<Repeater propName=\"${1:items}\" items={${1:items}} />"],
    "description": "Add React Bricks <Repeater> component"
  }
}
